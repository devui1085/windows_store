//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace WindowsStore.Client.Developer.Logic.DeveloperService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppCategoryDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppCategoryDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.AppType AppTypeField;
        
        private int IdField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.AppType AppType {
            get {
                return this.AppTypeField;
            }
            set {
                if ((this.AppTypeField.Equals(value) != true)) {
                    this.AppTypeField = value;
                    this.RaisePropertyChanged("AppType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppType", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum AppType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Application = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Game = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.AppCategoryDataContract AppCategoryField;
        
        private string DescriptionField;
        
        private int DeveloperIdField;
        
        private string DeveloperNameField;
        
        private System.Guid GuidField;
        
        private byte[] Icon128X128Field;
        
        private byte[] Icon256X256Field;
        
        private int IdField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.AppVersionDataContract LatestVersionField;
        
        private string NameField;
        
        private int NumberOfMobileScreenshotsField;
        
        private int PriceField;
        
        private long SizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.AppCategoryDataContract AppCategory {
            get {
                return this.AppCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AppCategoryField, value) != true)) {
                    this.AppCategoryField = value;
                    this.RaisePropertyChanged("AppCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeveloperId {
            get {
                return this.DeveloperIdField;
            }
            set {
                if ((this.DeveloperIdField.Equals(value) != true)) {
                    this.DeveloperIdField = value;
                    this.RaisePropertyChanged("DeveloperId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeveloperName {
            get {
                return this.DeveloperNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeveloperNameField, value) != true)) {
                    this.DeveloperNameField = value;
                    this.RaisePropertyChanged("DeveloperName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Icon128X128 {
            get {
                return this.Icon128X128Field;
            }
            set {
                if ((object.ReferenceEquals(this.Icon128X128Field, value) != true)) {
                    this.Icon128X128Field = value;
                    this.RaisePropertyChanged("Icon128X128");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Icon256X256 {
            get {
                return this.Icon256X256Field;
            }
            set {
                if ((object.ReferenceEquals(this.Icon256X256Field, value) != true)) {
                    this.Icon256X256Field = value;
                    this.RaisePropertyChanged("Icon256X256");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.AppVersionDataContract LatestVersion {
            get {
                return this.LatestVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestVersionField, value) != true)) {
                    this.LatestVersionField = value;
                    this.RaisePropertyChanged("LatestVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfMobileScreenshots {
            get {
                return this.NumberOfMobileScreenshotsField;
            }
            set {
                if ((this.NumberOfMobileScreenshotsField.Equals(value) != true)) {
                    this.NumberOfMobileScreenshotsField = value;
                    this.RaisePropertyChanged("NumberOfMobileScreenshots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppVersionDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppVersionDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid AppGuidField;
        
        private int AppIdField;
        
        private System.Nullable<long> ArmPackageSizeField;
        
        private System.Nullable<WindowsStore.Client.Developer.Logic.DeveloperService.CpuArchitecture> CpuArchitectureFlagsField;
        
        private string DescriptionField;
        
        private int DownloadsField;
        
        private bool HasArmPackageField;
        
        private bool HasX64PackageField;
        
        private bool HasX86PackageField;
        
        private int IdField;
        
        private System.DateTime PublishDateField;
        
        private long SizeField;
        
        private string VersionField;
        
        private System.Nullable<long> X64PackageSizeField;
        
        private System.Nullable<long> X86PackageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ArmPackageSize {
            get {
                return this.ArmPackageSizeField;
            }
            set {
                if ((this.ArmPackageSizeField.Equals(value) != true)) {
                    this.ArmPackageSizeField = value;
                    this.RaisePropertyChanged("ArmPackageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<WindowsStore.Client.Developer.Logic.DeveloperService.CpuArchitecture> CpuArchitectureFlags {
            get {
                return this.CpuArchitectureFlagsField;
            }
            set {
                if ((this.CpuArchitectureFlagsField.Equals(value) != true)) {
                    this.CpuArchitectureFlagsField = value;
                    this.RaisePropertyChanged("CpuArchitectureFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Downloads {
            get {
                return this.DownloadsField;
            }
            set {
                if ((this.DownloadsField.Equals(value) != true)) {
                    this.DownloadsField = value;
                    this.RaisePropertyChanged("Downloads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasArmPackage {
            get {
                return this.HasArmPackageField;
            }
            set {
                if ((this.HasArmPackageField.Equals(value) != true)) {
                    this.HasArmPackageField = value;
                    this.RaisePropertyChanged("HasArmPackage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasX64Package {
            get {
                return this.HasX64PackageField;
            }
            set {
                if ((this.HasX64PackageField.Equals(value) != true)) {
                    this.HasX64PackageField = value;
                    this.RaisePropertyChanged("HasX64Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasX86Package {
            get {
                return this.HasX86PackageField;
            }
            set {
                if ((this.HasX86PackageField.Equals(value) != true)) {
                    this.HasX86PackageField = value;
                    this.RaisePropertyChanged("HasX86Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> X64PackageSize {
            get {
                return this.X64PackageSizeField;
            }
            set {
                if ((this.X64PackageSizeField.Equals(value) != true)) {
                    this.X64PackageSizeField = value;
                    this.RaisePropertyChanged("X64PackageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> X86PackageSize {
            get {
                return this.X86PackageSizeField;
            }
            set {
                if ((this.X86PackageSizeField.Equals(value) != true)) {
                    this.X86PackageSizeField = value;
                    this.RaisePropertyChanged("X86PackageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="CpuArchitecture", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum CpuArchitecture : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Arm = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        X86 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        X64 = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NaturalPersonDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class NaturalPersonDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<byte> AgeField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private string NationalCodeField;
        
        private string PrimaryEmailField;
        
        private System.Nullable<WindowsStore.Client.Developer.Logic.DeveloperService.Sexuality> SexualityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCode {
            get {
                return this.NationalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalCodeField, value) != true)) {
                    this.NationalCodeField = value;
                    this.RaisePropertyChanged("NationalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEmail {
            get {
                return this.PrimaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEmailField, value) != true)) {
                    this.PrimaryEmailField = value;
                    this.RaisePropertyChanged("PrimaryEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<WindowsStore.Client.Developer.Logic.DeveloperService.Sexuality> Sexuality {
            get {
                return this.SexualityField;
            }
            set {
                if ((this.SexualityField.Equals(value) != true)) {
                    this.SexualityField = value;
                    this.RaisePropertyChanged("Sexuality");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sexuality", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum Sexuality : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalPersonDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class LegalPersonDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        private string PrimaryEmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEmail {
            get {
                return this.PrimaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEmailField, value) != true)) {
                    this.PrimaryEmailField = value;
                    this.RaisePropertyChanged("PrimaryEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationResultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AuthenticationResultDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AuthenticatedField;
        
        private string FirstNameField;
        
        private bool IsNaturalPersonField;
        
        private string LastNameField;
        
        private string NameField;
        
        private string PrimaryEmailField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.UserAccountStatus UserAccountStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Authenticated {
            get {
                return this.AuthenticatedField;
            }
            set {
                if ((this.AuthenticatedField.Equals(value) != true)) {
                    this.AuthenticatedField = value;
                    this.RaisePropertyChanged("Authenticated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNaturalPerson {
            get {
                return this.IsNaturalPersonField;
            }
            set {
                if ((this.IsNaturalPersonField.Equals(value) != true)) {
                    this.IsNaturalPersonField = value;
                    this.RaisePropertyChanged("IsNaturalPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEmail {
            get {
                return this.PrimaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEmailField, value) != true)) {
                    this.PrimaryEmailField = value;
                    this.RaisePropertyChanged("PrimaryEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.UserAccountStatus UserAccountStatus {
            get {
                return this.UserAccountStatusField;
            }
            set {
                if ((this.UserAccountStatusField.Equals(value) != true)) {
                    this.UserAccountStatusField = value;
                    this.RaisePropertyChanged("UserAccountStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAccountStatus", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum UserAccountStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Activated = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotActivated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blocked = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralInternalFault", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract.SoapFaults")]
    public partial class GeneralInternalFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.FaultCode FaultCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.FaultCode FaultCode {
            get {
                return this.FaultCodeField;
            }
            set {
                if ((this.FaultCodeField.Equals(value) != true)) {
                    this.FaultCodeField = value;
                    this.RaisePropertyChanged("FaultCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultCode", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum FaultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidVerificationCode = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerificationCodeExpired = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unauthorized = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAuthenticated = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppDetailDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppDetailDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.AppIconDataContract AppIconDataContractField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.AppPlatformSpecificationDataContract AppPlatformSpecificationDataContractField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.AppSpecificationDataContract AppSpecificationDataContractField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.AppVersionDataContract AppVersionDataContractField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.AppIconDataContract AppIconDataContract {
            get {
                return this.AppIconDataContractField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIconDataContractField, value) != true)) {
                    this.AppIconDataContractField = value;
                    this.RaisePropertyChanged("AppIconDataContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.AppPlatformSpecificationDataContract AppPlatformSpecificationDataContract {
            get {
                return this.AppPlatformSpecificationDataContractField;
            }
            set {
                if ((object.ReferenceEquals(this.AppPlatformSpecificationDataContractField, value) != true)) {
                    this.AppPlatformSpecificationDataContractField = value;
                    this.RaisePropertyChanged("AppPlatformSpecificationDataContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.AppSpecificationDataContract AppSpecificationDataContract {
            get {
                return this.AppSpecificationDataContractField;
            }
            set {
                if ((object.ReferenceEquals(this.AppSpecificationDataContractField, value) != true)) {
                    this.AppSpecificationDataContractField = value;
                    this.RaisePropertyChanged("AppSpecificationDataContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.AppVersionDataContract AppVersionDataContract {
            get {
                return this.AppVersionDataContractField;
            }
            set {
                if ((object.ReferenceEquals(this.AppVersionDataContractField, value) != true)) {
                    this.AppVersionDataContractField = value;
                    this.RaisePropertyChanged("AppVersionDataContract");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppIconDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppIconDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AppIdField;
        
        private byte[] Icon128X128Field;
        
        private byte[] Icon256X256Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Icon128X128 {
            get {
                return this.Icon128X128Field;
            }
            set {
                if ((object.ReferenceEquals(this.Icon128X128Field, value) != true)) {
                    this.Icon128X128Field = value;
                    this.RaisePropertyChanged("Icon128X128");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Icon256X256 {
            get {
                return this.Icon256X256Field;
            }
            set {
                if ((object.ReferenceEquals(this.Icon256X256Field, value) != true)) {
                    this.Icon256X256Field = value;
                    this.RaisePropertyChanged("Icon256X256");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppPlatformSpecificationDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppPlatformSpecificationDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AppIdField;
        
        private System.Nullable<WindowsStore.Client.Developer.Logic.DeveloperService.CpuArchitecture> CpuArchitectureFlagsField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> PlatformCategoriesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<WindowsStore.Client.Developer.Logic.DeveloperService.CpuArchitecture> CpuArchitectureFlags {
            get {
                return this.CpuArchitectureFlagsField;
            }
            set {
                if ((this.CpuArchitectureFlagsField.Equals(value) != true)) {
                    this.CpuArchitectureFlagsField = value;
                    this.RaisePropertyChanged("CpuArchitectureFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> PlatformCategories {
            get {
                return this.PlatformCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.PlatformCategoriesField, value) != true)) {
                    this.PlatformCategoriesField = value;
                    this.RaisePropertyChanged("PlatformCategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppSpecificationDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppSpecificationDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AppIdField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.AppType AppTypeField;
        
        private int CategoryIdField;
        
        private int CommentsCountField;
        
        private string DescriptionField;
        
        private int DesktopScreenshotsCountField;
        
        private int DownloadsCountField;
        
        private System.Guid GuidField;
        
        private int MobileScreenshotsCountField;
        
        private string NameField;
        
        private int PriceField;
        
        private int ScreenshotsCountField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.AppState StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.AppType AppType {
            get {
                return this.AppTypeField;
            }
            set {
                if ((this.AppTypeField.Equals(value) != true)) {
                    this.AppTypeField = value;
                    this.RaisePropertyChanged("AppType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentsCount {
            get {
                return this.CommentsCountField;
            }
            set {
                if ((this.CommentsCountField.Equals(value) != true)) {
                    this.CommentsCountField = value;
                    this.RaisePropertyChanged("CommentsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DesktopScreenshotsCount {
            get {
                return this.DesktopScreenshotsCountField;
            }
            set {
                if ((this.DesktopScreenshotsCountField.Equals(value) != true)) {
                    this.DesktopScreenshotsCountField = value;
                    this.RaisePropertyChanged("DesktopScreenshotsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DownloadsCount {
            get {
                return this.DownloadsCountField;
            }
            set {
                if ((this.DownloadsCountField.Equals(value) != true)) {
                    this.DownloadsCountField = value;
                    this.RaisePropertyChanged("DownloadsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MobileScreenshotsCount {
            get {
                return this.MobileScreenshotsCountField;
            }
            set {
                if ((this.MobileScreenshotsCountField.Equals(value) != true)) {
                    this.MobileScreenshotsCountField = value;
                    this.RaisePropertyChanged("MobileScreenshotsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreenshotsCount {
            get {
                return this.ScreenshotsCountField;
            }
            set {
                if ((this.ScreenshotsCountField.Equals(value) != true)) {
                    this.ScreenshotsCountField = value;
                    this.RaisePropertyChanged("ScreenshotsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.AppState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppState", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum AppState : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Incomplete = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Confirmed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Published = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unpublished = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlockedByAdmin = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class ScreenshotDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid AppGuidField;
        
        private int AppIdField;
        
        private string FileNameField;
        
        private int IdField;
        
        private byte[] ImageSourceField;
        
        private byte[] OriginalField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotSize ScreenshotSizeField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotType ScreenshotTypeField;
        
        private byte[] ThumbnailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageSource {
            get {
                return this.ImageSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageSourceField, value) != true)) {
                    this.ImageSourceField = value;
                    this.RaisePropertyChanged("ImageSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Original {
            get {
                return this.OriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalField, value) != true)) {
                    this.OriginalField = value;
                    this.RaisePropertyChanged("Original");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotSize ScreenshotSize {
            get {
                return this.ScreenshotSizeField;
            }
            set {
                if ((this.ScreenshotSizeField.Equals(value) != true)) {
                    this.ScreenshotSizeField = value;
                    this.RaisePropertyChanged("ScreenshotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotType ScreenshotType {
            get {
                return this.ScreenshotTypeField;
            }
            set {
                if ((this.ScreenshotTypeField.Equals(value) != true)) {
                    this.ScreenshotTypeField = value;
                    this.RaisePropertyChanged("ScreenshotType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotSize", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum ScreenshotSize : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thumbnail = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotType", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum ScreenshotType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Desktop = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterDataContractBase", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotFilterDataContract))]
    public partial class FilterDataContractBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotFilterDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class ScreenshotFilterDataContract : WindowsStore.Client.Developer.Logic.DeveloperService.FilterDataContractBase {
        
        private System.Guid AppGuidField;
        
        private int AppIdField;
        
        private int ScreenshotIdField;
        
        private int ScreenshotIndexField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotSize ScreenshotSizeField;
        
        private WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotType ScreenshotTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreenshotId {
            get {
                return this.ScreenshotIdField;
            }
            set {
                if ((this.ScreenshotIdField.Equals(value) != true)) {
                    this.ScreenshotIdField = value;
                    this.RaisePropertyChanged("ScreenshotId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreenshotIndex {
            get {
                return this.ScreenshotIndexField;
            }
            set {
                if ((this.ScreenshotIndexField.Equals(value) != true)) {
                    this.ScreenshotIndexField = value;
                    this.RaisePropertyChanged("ScreenshotIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotSize ScreenshotSize {
            get {
                return this.ScreenshotSizeField;
            }
            set {
                if ((this.ScreenshotSizeField.Equals(value) != true)) {
                    this.ScreenshotSizeField = value;
                    this.RaisePropertyChanged("ScreenshotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotType ScreenshotType {
            get {
                return this.ScreenshotTypeField;
            }
            set {
                if ((this.ScreenshotTypeField.Equals(value) != true)) {
                    this.ScreenshotTypeField = value;
                    this.RaisePropertyChanged("ScreenshotType");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Paasteel.ir", ConfigurationName="DeveloperService.IDeveloperService")]
    public interface IDeveloperService {
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/GetAppCategories", ReplyAction="Paasteel.ir/IDeveloperService/GetAppCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<WindowsStore.Client.Developer.Logic.DeveloperService.AppCategoryDataContract>> GetAppCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/RegisterApp", ReplyAction="Paasteel.ir/IDeveloperService/RegisterAppResponse")]
        System.Threading.Tasks.Task RegisterAppAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppDataContract appDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/RegisterNaturalPerson", ReplyAction="Paasteel.ir/IDeveloperService/RegisterNaturalPersonResponse")]
        System.Threading.Tasks.Task RegisterNaturalPersonAsync(WindowsStore.Client.Developer.Logic.DeveloperService.NaturalPersonDataContract naturalPersonDataContract, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/RegisterLegalPerson", ReplyAction="Paasteel.ir/IDeveloperService/RegisterLegalPersonResponse")]
        System.Threading.Tasks.Task RegisterLegalPersonAsync(WindowsStore.Client.Developer.Logic.DeveloperService.LegalPersonDataContract legalPersonDataContract, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/SignIn", ReplyAction="Paasteel.ir/IDeveloperService/SignInResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsStore.Client.Developer.Logic.DeveloperService.GeneralInternalFault), Action="Paasteel.ir/IDeveloperService/SignInGeneralInternalFaultFault", Name="GeneralInternalFault", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract.SoapFaults")]
        System.Threading.Tasks.Task<WindowsStore.Client.Developer.Logic.DeveloperService.AuthenticationResultDataContract> SignInAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/IsEmailAvailableForRegistration", ReplyAction="Paasteel.ir/IDeveloperService/IsEmailAvailableForRegistrationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsStore.Client.Developer.Logic.DeveloperService.GeneralInternalFault), Action="Paasteel.ir/IDeveloperService/IsEmailAvailableForRegistrationGeneralInternalFault" +
            "Fault", Name="GeneralInternalFault", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract.SoapFaults")]
        System.Threading.Tasks.Task<bool> IsEmailAvailableForRegistrationAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/TryActivateAccount", ReplyAction="Paasteel.ir/IDeveloperService/TryActivateAccountResponse")]
        System.Threading.Tasks.Task<bool> TryActivateAccountAsync(string primaryEmail, int activationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/ResendActivationCode", ReplyAction="Paasteel.ir/IDeveloperService/ResendActivationCodeResponse")]
        System.Threading.Tasks.Task<bool> ResendActivationCodeAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/GetDeveloperApps", ReplyAction="Paasteel.ir/IDeveloperService/GetDeveloperAppsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsStore.Client.Developer.Logic.DeveloperService.GeneralInternalFault), Action="Paasteel.ir/IDeveloperService/GetDeveloperAppsGeneralInternalFaultFault", Name="GeneralInternalFault", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract.SoapFaults")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<WindowsStore.Client.Developer.Logic.DeveloperService.AppDetailDataContract>> GetDeveloperAppsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/GetDeveloperAppDetail", ReplyAction="Paasteel.ir/IDeveloperService/GetDeveloperAppDetailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsStore.Client.Developer.Logic.DeveloperService.GeneralInternalFault), Action="Paasteel.ir/IDeveloperService/GetDeveloperAppDetailGeneralInternalFaultFault", Name="GeneralInternalFault", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract.SoapFaults")]
        System.Threading.Tasks.Task<WindowsStore.Client.Developer.Logic.DeveloperService.AppDetailDataContract> GetDeveloperAppDetailAsync(int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/VerifyActiveSession", ReplyAction="Paasteel.ir/IDeveloperService/VerifyActiveSessionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WindowsStore.Client.Developer.Logic.DeveloperService.GeneralInternalFault), Action="Paasteel.ir/IDeveloperService/VerifyActiveSessionGeneralInternalFaultFault", Name="GeneralInternalFault", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract.SoapFaults")]
        System.Threading.Tasks.Task<bool> VerifyActiveSessionAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/AppNameIsAvailble", ReplyAction="Paasteel.ir/IDeveloperService/AppNameIsAvailbleResponse")]
        System.Threading.Tasks.Task<bool> AppNameIsAvailbleAsync(string appName, int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/RegisterAppSpecification", ReplyAction="Paasteel.ir/IDeveloperService/RegisterAppSpecificationResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.Developer.Logic.DeveloperService.AppSpecificationDataContract> RegisterAppSpecificationAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppSpecificationDataContract appSpecification);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/UpdateAppSpecification", ReplyAction="Paasteel.ir/IDeveloperService/UpdateAppSpecificationResponse")]
        System.Threading.Tasks.Task UpdateAppSpecificationAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppSpecificationDataContract appSpecification);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/RegisterAppIcon", ReplyAction="Paasteel.ir/IDeveloperService/RegisterAppIconResponse")]
        System.Threading.Tasks.Task RegisterAppIconAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppIconDataContract appIconDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/RegisterAppPlatformSpecification", ReplyAction="Paasteel.ir/IDeveloperService/RegisterAppPlatformSpecificationResponse")]
        System.Threading.Tasks.Task RegisterAppPlatformSpecificationAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppPlatformSpecificationDataContract appPlatformSpecificationDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/RegisterAppVersion", ReplyAction="Paasteel.ir/IDeveloperService/RegisterAppVersionResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.Developer.Logic.DeveloperService.AppVersionDataContract> RegisterAppVersionAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppVersionDataContract appVersionDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/UpdateAppVersion", ReplyAction="Paasteel.ir/IDeveloperService/UpdateAppVersionResponse")]
        System.Threading.Tasks.Task UpdateAppVersionAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppVersionDataContract appVersionDataContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/SaveScreenshot", ReplyAction="Paasteel.ir/IDeveloperService/SaveScreenshotResponse")]
        System.Threading.Tasks.Task SaveScreenshotAsync(WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotDataContract screenshot);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/RemoveScreenshot", ReplyAction="Paasteel.ir/IDeveloperService/RemoveScreenshotResponse")]
        System.Threading.Tasks.Task RemoveScreenshotAsync(WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotDataContract screenshot);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/GetScreenshot", ReplyAction="Paasteel.ir/IDeveloperService/GetScreenshotResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotDataContract> GetScreenshotAsync(WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotFilterDataContract filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IDeveloperService/GetScreenshotIds", ReplyAction="Paasteel.ir/IDeveloperService/GetScreenshotIdsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<int>> GetScreenshotIdsAsync(WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotFilterDataContract fitler);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeveloperServiceChannel : WindowsStore.Client.Developer.Logic.DeveloperService.IDeveloperService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeveloperServiceClient : System.ServiceModel.ClientBase<WindowsStore.Client.Developer.Logic.DeveloperService.IDeveloperService>, WindowsStore.Client.Developer.Logic.DeveloperService.IDeveloperService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DeveloperServiceClient() : 
                base(DeveloperServiceClient.GetDefaultBinding(), DeveloperServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.NetHttpBinding_IDeveloperService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DeveloperServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(DeveloperServiceClient.GetBindingForEndpoint(endpointConfiguration), DeveloperServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DeveloperServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DeveloperServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DeveloperServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DeveloperServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DeveloperServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<WindowsStore.Client.Developer.Logic.DeveloperService.AppCategoryDataContract>> GetAppCategoriesAsync() {
            return base.Channel.GetAppCategoriesAsync();
        }
        
        public System.Threading.Tasks.Task RegisterAppAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppDataContract appDataContract) {
            return base.Channel.RegisterAppAsync(appDataContract);
        }
        
        public System.Threading.Tasks.Task RegisterNaturalPersonAsync(WindowsStore.Client.Developer.Logic.DeveloperService.NaturalPersonDataContract naturalPersonDataContract, string password) {
            return base.Channel.RegisterNaturalPersonAsync(naturalPersonDataContract, password);
        }
        
        public System.Threading.Tasks.Task RegisterLegalPersonAsync(WindowsStore.Client.Developer.Logic.DeveloperService.LegalPersonDataContract legalPersonDataContract, string password) {
            return base.Channel.RegisterLegalPersonAsync(legalPersonDataContract, password);
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.Developer.Logic.DeveloperService.AuthenticationResultDataContract> SignInAsync(string userName, string password) {
            return base.Channel.SignInAsync(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> IsEmailAvailableForRegistrationAsync(string email) {
            return base.Channel.IsEmailAvailableForRegistrationAsync(email);
        }
        
        public System.Threading.Tasks.Task<bool> TryActivateAccountAsync(string primaryEmail, int activationCode) {
            return base.Channel.TryActivateAccountAsync(primaryEmail, activationCode);
        }
        
        public System.Threading.Tasks.Task<bool> ResendActivationCodeAsync(string email) {
            return base.Channel.ResendActivationCodeAsync(email);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<WindowsStore.Client.Developer.Logic.DeveloperService.AppDetailDataContract>> GetDeveloperAppsAsync() {
            return base.Channel.GetDeveloperAppsAsync();
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.Developer.Logic.DeveloperService.AppDetailDataContract> GetDeveloperAppDetailAsync(int appId) {
            return base.Channel.GetDeveloperAppDetailAsync(appId);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyActiveSessionAsync(string userName) {
            return base.Channel.VerifyActiveSessionAsync(userName);
        }
        
        public System.Threading.Tasks.Task<bool> AppNameIsAvailbleAsync(string appName, int appId) {
            return base.Channel.AppNameIsAvailbleAsync(appName, appId);
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.Developer.Logic.DeveloperService.AppSpecificationDataContract> RegisterAppSpecificationAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppSpecificationDataContract appSpecification) {
            return base.Channel.RegisterAppSpecificationAsync(appSpecification);
        }
        
        public System.Threading.Tasks.Task UpdateAppSpecificationAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppSpecificationDataContract appSpecification) {
            return base.Channel.UpdateAppSpecificationAsync(appSpecification);
        }
        
        public System.Threading.Tasks.Task RegisterAppIconAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppIconDataContract appIconDataContract) {
            return base.Channel.RegisterAppIconAsync(appIconDataContract);
        }
        
        public System.Threading.Tasks.Task RegisterAppPlatformSpecificationAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppPlatformSpecificationDataContract appPlatformSpecificationDataContract) {
            return base.Channel.RegisterAppPlatformSpecificationAsync(appPlatformSpecificationDataContract);
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.Developer.Logic.DeveloperService.AppVersionDataContract> RegisterAppVersionAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppVersionDataContract appVersionDataContract) {
            return base.Channel.RegisterAppVersionAsync(appVersionDataContract);
        }
        
        public System.Threading.Tasks.Task UpdateAppVersionAsync(WindowsStore.Client.Developer.Logic.DeveloperService.AppVersionDataContract appVersionDataContract) {
            return base.Channel.UpdateAppVersionAsync(appVersionDataContract);
        }
        
        public System.Threading.Tasks.Task SaveScreenshotAsync(WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotDataContract screenshot) {
            return base.Channel.SaveScreenshotAsync(screenshot);
        }
        
        public System.Threading.Tasks.Task RemoveScreenshotAsync(WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotDataContract screenshot) {
            return base.Channel.RemoveScreenshotAsync(screenshot);
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotDataContract> GetScreenshotAsync(WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotFilterDataContract filter) {
            return base.Channel.GetScreenshotAsync(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<int>> GetScreenshotIdsAsync(WindowsStore.Client.Developer.Logic.DeveloperService.ScreenshotFilterDataContract fitler) {
            return base.Channel.GetScreenshotIdsAsync(fitler);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_IDeveloperService)) {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                result.Elements.Add(new System.ServiceModel.Channels.BinaryMessageEncodingBindingElement());
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_IDeveloperService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost/Service/DeveloperService.svc/~/Service/Developer.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return DeveloperServiceClient.GetBindingForEndpoint(EndpointConfiguration.NetHttpBinding_IDeveloperService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return DeveloperServiceClient.GetEndpointAddress(EndpointConfiguration.NetHttpBinding_IDeveloperService);
        }
        
        public enum EndpointConfiguration {
            
            NetHttpBinding_IDeveloperService,
        }
    }
}
