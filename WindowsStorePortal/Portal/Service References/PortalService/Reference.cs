//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Store.Portal.PortalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppCategoryDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    [System.SerializableAttribute()]
    public partial class AppCategoryDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Store.Portal.PortalService.AppType AppTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Store.Portal.PortalService.AppType AppType {
            get {
                return this.AppTypeField;
            }
            set {
                if ((this.AppTypeField.Equals(value) != true)) {
                    this.AppTypeField = value;
                    this.RaisePropertyChanged("AppType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppType", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum AppType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Application = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Game = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterDataContractBase", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Store.Portal.PortalService.ScreenshotFilterDataContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Store.Portal.PortalService.AppFilterDataContract))]
    public partial class FilterDataContractBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotFilterDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    [System.SerializableAttribute()]
    public partial class ScreenshotFilterDataContract : Store.Portal.PortalService.FilterDataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AppGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScreenshotIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScreenshotIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Store.Portal.PortalService.ScreenshotSize ScreenshotSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Store.Portal.PortalService.ScreenshotType ScreenshotTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreenshotId {
            get {
                return this.ScreenshotIdField;
            }
            set {
                if ((this.ScreenshotIdField.Equals(value) != true)) {
                    this.ScreenshotIdField = value;
                    this.RaisePropertyChanged("ScreenshotId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreenshotIndex {
            get {
                return this.ScreenshotIndexField;
            }
            set {
                if ((this.ScreenshotIndexField.Equals(value) != true)) {
                    this.ScreenshotIndexField = value;
                    this.RaisePropertyChanged("ScreenshotIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Store.Portal.PortalService.ScreenshotSize ScreenshotSize {
            get {
                return this.ScreenshotSizeField;
            }
            set {
                if ((this.ScreenshotSizeField.Equals(value) != true)) {
                    this.ScreenshotSizeField = value;
                    this.RaisePropertyChanged("ScreenshotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Store.Portal.PortalService.ScreenshotType ScreenshotType {
            get {
                return this.ScreenshotTypeField;
            }
            set {
                if ((this.ScreenshotTypeField.Equals(value) != true)) {
                    this.ScreenshotTypeField = value;
                    this.RaisePropertyChanged("ScreenshotType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppFilterDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    [System.SerializableAttribute()]
    public partial class AppFilterDataContract : Store.Portal.PortalService.FilterDataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AppCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> AppGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Store.Portal.PortalService.AppOrderMethod> AppOrderMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Store.Portal.PortalService.AppPricing> AppPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Store.Portal.PortalService.AppType> AppTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> FeaturedAppField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Include128X128IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Include256X256IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludeAppPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AppCategoryId {
            get {
                return this.AppCategoryIdField;
            }
            set {
                if ((this.AppCategoryIdField.Equals(value) != true)) {
                    this.AppCategoryIdField = value;
                    this.RaisePropertyChanged("AppCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Store.Portal.PortalService.AppOrderMethod> AppOrderMethod {
            get {
                return this.AppOrderMethodField;
            }
            set {
                if ((this.AppOrderMethodField.Equals(value) != true)) {
                    this.AppOrderMethodField = value;
                    this.RaisePropertyChanged("AppOrderMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Store.Portal.PortalService.AppPricing> AppPricing {
            get {
                return this.AppPricingField;
            }
            set {
                if ((this.AppPricingField.Equals(value) != true)) {
                    this.AppPricingField = value;
                    this.RaisePropertyChanged("AppPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Store.Portal.PortalService.AppType> AppType {
            get {
                return this.AppTypeField;
            }
            set {
                if ((this.AppTypeField.Equals(value) != true)) {
                    this.AppTypeField = value;
                    this.RaisePropertyChanged("AppType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FeaturedApp {
            get {
                return this.FeaturedAppField;
            }
            set {
                if ((this.FeaturedAppField.Equals(value) != true)) {
                    this.FeaturedAppField = value;
                    this.RaisePropertyChanged("FeaturedApp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Include128X128Icon {
            get {
                return this.Include128X128IconField;
            }
            set {
                if ((this.Include128X128IconField.Equals(value) != true)) {
                    this.Include128X128IconField = value;
                    this.RaisePropertyChanged("Include128X128Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Include256X256Icon {
            get {
                return this.Include256X256IconField;
            }
            set {
                if ((this.Include256X256IconField.Equals(value) != true)) {
                    this.Include256X256IconField = value;
                    this.RaisePropertyChanged("Include256X256Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeAppPrice {
            get {
                return this.IncludeAppPriceField;
            }
            set {
                if ((this.IncludeAppPriceField.Equals(value) != true)) {
                    this.IncludeAppPriceField = value;
                    this.RaisePropertyChanged("IncludeAppPrice");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppOrderMethod", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum AppOrderMethod : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Top = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BestRated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewAndRising = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppPricing", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum AppPricing : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreeApp = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonFreeApp = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotSize", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum ScreenshotSize : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thumbnail = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotType", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum ScreenshotType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Desktop = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    [System.SerializableAttribute()]
    public partial class AppDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Store.Portal.PortalService.AppCategoryDataContract AppCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeveloperIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeveloperNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] Icon128X128Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] Icon256X256Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Store.Portal.PortalService.AppVersionDataContract LatestVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfMobileScreenshotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Store.Portal.PortalService.AppCategoryDataContract AppCategory {
            get {
                return this.AppCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AppCategoryField, value) != true)) {
                    this.AppCategoryField = value;
                    this.RaisePropertyChanged("AppCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeveloperId {
            get {
                return this.DeveloperIdField;
            }
            set {
                if ((this.DeveloperIdField.Equals(value) != true)) {
                    this.DeveloperIdField = value;
                    this.RaisePropertyChanged("DeveloperId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeveloperName {
            get {
                return this.DeveloperNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeveloperNameField, value) != true)) {
                    this.DeveloperNameField = value;
                    this.RaisePropertyChanged("DeveloperName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Icon128X128 {
            get {
                return this.Icon128X128Field;
            }
            set {
                if ((object.ReferenceEquals(this.Icon128X128Field, value) != true)) {
                    this.Icon128X128Field = value;
                    this.RaisePropertyChanged("Icon128X128");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Icon256X256 {
            get {
                return this.Icon256X256Field;
            }
            set {
                if ((object.ReferenceEquals(this.Icon256X256Field, value) != true)) {
                    this.Icon256X256Field = value;
                    this.RaisePropertyChanged("Icon256X256");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Store.Portal.PortalService.AppVersionDataContract LatestVersion {
            get {
                return this.LatestVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestVersionField, value) != true)) {
                    this.LatestVersionField = value;
                    this.RaisePropertyChanged("LatestVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfMobileScreenshots {
            get {
                return this.NumberOfMobileScreenshotsField;
            }
            set {
                if ((this.NumberOfMobileScreenshotsField.Equals(value) != true)) {
                    this.NumberOfMobileScreenshotsField = value;
                    this.RaisePropertyChanged("NumberOfMobileScreenshots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppVersionDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    [System.SerializableAttribute()]
    public partial class AppVersionDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AppGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ArmPackageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Store.Portal.PortalService.CpuArchitecture> CpuArchitectureFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DownloadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasArmPackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasX64PackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasX86PackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> X64PackageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> X86PackageSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ArmPackageSize {
            get {
                return this.ArmPackageSizeField;
            }
            set {
                if ((this.ArmPackageSizeField.Equals(value) != true)) {
                    this.ArmPackageSizeField = value;
                    this.RaisePropertyChanged("ArmPackageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Store.Portal.PortalService.CpuArchitecture> CpuArchitectureFlags {
            get {
                return this.CpuArchitectureFlagsField;
            }
            set {
                if ((this.CpuArchitectureFlagsField.Equals(value) != true)) {
                    this.CpuArchitectureFlagsField = value;
                    this.RaisePropertyChanged("CpuArchitectureFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Downloads {
            get {
                return this.DownloadsField;
            }
            set {
                if ((this.DownloadsField.Equals(value) != true)) {
                    this.DownloadsField = value;
                    this.RaisePropertyChanged("Downloads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasArmPackage {
            get {
                return this.HasArmPackageField;
            }
            set {
                if ((this.HasArmPackageField.Equals(value) != true)) {
                    this.HasArmPackageField = value;
                    this.RaisePropertyChanged("HasArmPackage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasX64Package {
            get {
                return this.HasX64PackageField;
            }
            set {
                if ((this.HasX64PackageField.Equals(value) != true)) {
                    this.HasX64PackageField = value;
                    this.RaisePropertyChanged("HasX64Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasX86Package {
            get {
                return this.HasX86PackageField;
            }
            set {
                if ((this.HasX86PackageField.Equals(value) != true)) {
                    this.HasX86PackageField = value;
                    this.RaisePropertyChanged("HasX86Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> X64PackageSize {
            get {
                return this.X64PackageSizeField;
            }
            set {
                if ((this.X64PackageSizeField.Equals(value) != true)) {
                    this.X64PackageSizeField = value;
                    this.RaisePropertyChanged("X64PackageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> X86PackageSize {
            get {
                return this.X86PackageSizeField;
            }
            set {
                if ((this.X86PackageSizeField.Equals(value) != true)) {
                    this.X86PackageSizeField = value;
                    this.RaisePropertyChanged("X86PackageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="CpuArchitecture", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum CpuArchitecture : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Arm = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        X86 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        X64 = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    [System.SerializableAttribute()]
    public partial class ScreenshotDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AppGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] OriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Store.Portal.PortalService.ScreenshotSize ScreenshotSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Store.Portal.PortalService.ScreenshotType ScreenshotTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ThumbnailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageSource {
            get {
                return this.ImageSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageSourceField, value) != true)) {
                    this.ImageSourceField = value;
                    this.RaisePropertyChanged("ImageSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Original {
            get {
                return this.OriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalField, value) != true)) {
                    this.OriginalField = value;
                    this.RaisePropertyChanged("Original");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Store.Portal.PortalService.ScreenshotSize ScreenshotSize {
            get {
                return this.ScreenshotSizeField;
            }
            set {
                if ((this.ScreenshotSizeField.Equals(value) != true)) {
                    this.ScreenshotSizeField = value;
                    this.RaisePropertyChanged("ScreenshotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Store.Portal.PortalService.ScreenshotType ScreenshotType {
            get {
                return this.ScreenshotTypeField;
            }
            set {
                if ((this.ScreenshotTypeField.Equals(value) != true)) {
                    this.ScreenshotTypeField = value;
                    this.RaisePropertyChanged("ScreenshotType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Paasteel.ir", ConfigurationName="PortalService.IPortalService")]
    public interface IPortalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetAppCategories", ReplyAction="Paasteel.ir/IPortalService/GetAppCategoriesResponse")]
        Store.Portal.PortalService.AppCategoryDataContract[] GetAppCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetAppCategories", ReplyAction="Paasteel.ir/IPortalService/GetAppCategoriesResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.AppCategoryDataContract[]> GetAppCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetAppDetail", ReplyAction="Paasteel.ir/IPortalService/GetAppDetailResponse")]
        Store.Portal.PortalService.AppDataContract GetAppDetail(Store.Portal.PortalService.AppFilterDataContract filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetAppDetail", ReplyAction="Paasteel.ir/IPortalService/GetAppDetailResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract> GetAppDetailAsync(Store.Portal.PortalService.AppFilterDataContract filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetAppScreenshot", ReplyAction="Paasteel.ir/IPortalService/GetAppScreenshotResponse")]
        Store.Portal.PortalService.ScreenshotDataContract GetAppScreenshot(Store.Portal.PortalService.ScreenshotFilterDataContract filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetAppScreenshot", ReplyAction="Paasteel.ir/IPortalService/GetAppScreenshotResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.ScreenshotDataContract> GetAppScreenshotAsync(Store.Portal.PortalService.ScreenshotFilterDataContract filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetSpecialApps", ReplyAction="Paasteel.ir/IPortalService/GetSpecialAppsResponse")]
        Store.Portal.PortalService.AppDataContract[] GetSpecialApps();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetSpecialApps", ReplyAction="Paasteel.ir/IPortalService/GetSpecialAppsResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetSpecialAppsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetMostPopularApps", ReplyAction="Paasteel.ir/IPortalService/GetMostPopularAppsResponse")]
        Store.Portal.PortalService.AppDataContract[] GetMostPopularApps();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetMostPopularApps", ReplyAction="Paasteel.ir/IPortalService/GetMostPopularAppsResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetMostPopularAppsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetChosenApps", ReplyAction="Paasteel.ir/IPortalService/GetChosenAppsResponse")]
        Store.Portal.PortalService.AppDataContract[] GetChosenApps();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetChosenApps", ReplyAction="Paasteel.ir/IPortalService/GetChosenAppsResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetChosenAppsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetNewApps", ReplyAction="Paasteel.ir/IPortalService/GetNewAppsResponse")]
        Store.Portal.PortalService.AppDataContract[] GetNewApps();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetNewApps", ReplyAction="Paasteel.ir/IPortalService/GetNewAppsResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetNewAppsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetSpecialGames", ReplyAction="Paasteel.ir/IPortalService/GetSpecialGamesResponse")]
        Store.Portal.PortalService.AppDataContract[] GetSpecialGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetSpecialGames", ReplyAction="Paasteel.ir/IPortalService/GetSpecialGamesResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetSpecialGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetMostPopularGames", ReplyAction="Paasteel.ir/IPortalService/GetMostPopularGamesResponse")]
        Store.Portal.PortalService.AppDataContract[] GetMostPopularGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetMostPopularGames", ReplyAction="Paasteel.ir/IPortalService/GetMostPopularGamesResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetMostPopularGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetChosenGames", ReplyAction="Paasteel.ir/IPortalService/GetChosenGamesResponse")]
        Store.Portal.PortalService.AppDataContract[] GetChosenGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetChosenGames", ReplyAction="Paasteel.ir/IPortalService/GetChosenGamesResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetChosenGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetNewGames", ReplyAction="Paasteel.ir/IPortalService/GetNewGamesResponse")]
        Store.Portal.PortalService.AppDataContract[] GetNewGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetNewGames", ReplyAction="Paasteel.ir/IPortalService/GetNewGamesResponse")]
        System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetNewGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetAppIcon128", ReplyAction="Paasteel.ir/IPortalService/GetAppIcon128Response")]
        byte[] GetAppIcon128(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetAppIcon128", ReplyAction="Paasteel.ir/IPortalService/GetAppIcon128Response")]
        System.Threading.Tasks.Task<byte[]> GetAppIcon128Async(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetAppIcon256", ReplyAction="Paasteel.ir/IPortalService/GetAppIcon256Response")]
        byte[] GetAppIcon256(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.ir/IPortalService/GetAppIcon256", ReplyAction="Paasteel.ir/IPortalService/GetAppIcon256Response")]
        System.Threading.Tasks.Task<byte[]> GetAppIcon256Async(System.Guid guid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPortalServiceChannel : Store.Portal.PortalService.IPortalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PortalServiceClient : System.ServiceModel.ClientBase<Store.Portal.PortalService.IPortalService>, Store.Portal.PortalService.IPortalService {
        
        public PortalServiceClient() {
        }
        
        public PortalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PortalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Store.Portal.PortalService.AppCategoryDataContract[] GetAppCategories() {
            return base.Channel.GetAppCategories();
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.AppCategoryDataContract[]> GetAppCategoriesAsync() {
            return base.Channel.GetAppCategoriesAsync();
        }
        
        public Store.Portal.PortalService.AppDataContract GetAppDetail(Store.Portal.PortalService.AppFilterDataContract filter) {
            return base.Channel.GetAppDetail(filter);
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract> GetAppDetailAsync(Store.Portal.PortalService.AppFilterDataContract filter) {
            return base.Channel.GetAppDetailAsync(filter);
        }
        
        public Store.Portal.PortalService.ScreenshotDataContract GetAppScreenshot(Store.Portal.PortalService.ScreenshotFilterDataContract filter) {
            return base.Channel.GetAppScreenshot(filter);
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.ScreenshotDataContract> GetAppScreenshotAsync(Store.Portal.PortalService.ScreenshotFilterDataContract filter) {
            return base.Channel.GetAppScreenshotAsync(filter);
        }
        
        public Store.Portal.PortalService.AppDataContract[] GetSpecialApps() {
            return base.Channel.GetSpecialApps();
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetSpecialAppsAsync() {
            return base.Channel.GetSpecialAppsAsync();
        }
        
        public Store.Portal.PortalService.AppDataContract[] GetMostPopularApps() {
            return base.Channel.GetMostPopularApps();
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetMostPopularAppsAsync() {
            return base.Channel.GetMostPopularAppsAsync();
        }
        
        public Store.Portal.PortalService.AppDataContract[] GetChosenApps() {
            return base.Channel.GetChosenApps();
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetChosenAppsAsync() {
            return base.Channel.GetChosenAppsAsync();
        }
        
        public Store.Portal.PortalService.AppDataContract[] GetNewApps() {
            return base.Channel.GetNewApps();
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetNewAppsAsync() {
            return base.Channel.GetNewAppsAsync();
        }
        
        public Store.Portal.PortalService.AppDataContract[] GetSpecialGames() {
            return base.Channel.GetSpecialGames();
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetSpecialGamesAsync() {
            return base.Channel.GetSpecialGamesAsync();
        }
        
        public Store.Portal.PortalService.AppDataContract[] GetMostPopularGames() {
            return base.Channel.GetMostPopularGames();
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetMostPopularGamesAsync() {
            return base.Channel.GetMostPopularGamesAsync();
        }
        
        public Store.Portal.PortalService.AppDataContract[] GetChosenGames() {
            return base.Channel.GetChosenGames();
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetChosenGamesAsync() {
            return base.Channel.GetChosenGamesAsync();
        }
        
        public Store.Portal.PortalService.AppDataContract[] GetNewGames() {
            return base.Channel.GetNewGames();
        }
        
        public System.Threading.Tasks.Task<Store.Portal.PortalService.AppDataContract[]> GetNewGamesAsync() {
            return base.Channel.GetNewGamesAsync();
        }
        
        public byte[] GetAppIcon128(System.Guid guid) {
            return base.Channel.GetAppIcon128(guid);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetAppIcon128Async(System.Guid guid) {
            return base.Channel.GetAppIcon128Async(guid);
        }
        
        public byte[] GetAppIcon256(System.Guid guid) {
            return base.Channel.GetAppIcon256(guid);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetAppIcon256Async(System.Guid guid) {
            return base.Channel.GetAppIcon256Async(guid);
        }
    }
}
