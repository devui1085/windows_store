//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Blend.SampleData.SampleDataSource
{
    using System; 
    using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
    internal class SampleDataSource { }
#else

    public class SampleDataSource : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        public SampleDataSource()
        {
            try
            {
                Uri resourceUri = new Uri("ms-appx:/SampleData/SampleDataSource/SampleDataSource.xaml", UriKind.RelativeOrAbsolute);
                Windows.UI.Xaml.Application.LoadComponent(this, resourceUri);
            }
            catch
            {
            }
        }

        private TopApplications _TopApplications = new TopApplications();

        public TopApplications TopApplications
        {
            get
            {
                return this._TopApplications;
            }
        }

        private StoreApp _StoreApp = new StoreApp();

        public StoreApp StoreApp
        {
            get
            {
                return this._StoreApp;
            }

            set
            {
                if (this._StoreApp != value)
                {
                    this._StoreApp = value;
                    this.OnPropertyChanged("StoreApp");
                }
            }
        }

        private DownloadManager _DownloadManager = new DownloadManager();

        public DownloadManager DownloadManager
        {
            get
            {
                return this._DownloadManager;
            }

            set
            {
                if (this._DownloadManager != value)
                {
                    this._DownloadManager = value;
                    this.OnPropertyChanged("DownloadManager");
                }
            }
        }

        private Person _Person = new Person();

        public Person Person
        {
            get
            {
                return this._Person;
            }

            set
            {
                if (this._Person != value)
                {
                    this._Person = value;
                    this.OnPropertyChanged("Person");
                }
            }
        }

        private AppScreenShots _AppScreenShots = new AppScreenShots();

        public AppScreenShots AppScreenShots
        {
            get
            {
                return this._AppScreenShots;
            }
        }

        private RandomApps _RandomApps = new RandomApps();

        public RandomApps RandomApps
        {
            get
            {
                return this._RandomApps;
            }
        }

        private StoreApps _StoreApps = new StoreApps();

        public StoreApps StoreApps
        {
            get
            {
                return this._StoreApps;
            }
        }

        private FeaturedApps _FeaturedApps = new FeaturedApps();

        public FeaturedApps FeaturedApps
        {
            get
            {
                return this._FeaturedApps;
            }
        }

        private double _BackgroundImageHeight = 0;

        public double BackgroundImageHeight
        {
            get
            {
                return this._BackgroundImageHeight;
            }

            set
            {
                if (this._BackgroundImageHeight != value)
                {
                    this._BackgroundImageHeight = value;
                    this.OnPropertyChanged("BackgroundImageHeight");
                }
            }
        }
    }

    public class TopApplications : System.Collections.ObjectModel.ObservableCollection<TopApplicationsItem>
    { 
    }

    public class TopApplicationsItem : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private LatestVersion1 _LatestVersion = new LatestVersion1();

        public LatestVersion1 LatestVersion
        {
            get
            {
                return this._LatestVersion;
            }

            set
            {
                if (this._LatestVersion != value)
                {
                    this._LatestVersion = value;
                    this.OnPropertyChanged("LatestVersion");
                }
            }
        }

        private string _Name = string.Empty;

        public string Name
        {
            get
            {
                return this._Name;
            }

            set
            {
                if (this._Name != value)
                {
                    this._Name = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        private Windows.UI.Xaml.Media.ImageSource _Icon128x128 = null;

        public Windows.UI.Xaml.Media.ImageSource Icon128x128
        {
            get
            {
                return this._Icon128x128;
            }

            set
            {
                if (this._Icon128x128 != value)
                {
                    this._Icon128x128 = value;
                    this.OnPropertyChanged("Icon128x128");
                }
            }
        }

        private string _PriceString = string.Empty;

        public string PriceString
        {
            get
            {
                return this._PriceString;
            }

            set
            {
                if (this._PriceString != value)
                {
                    this._PriceString = value;
                    this.OnPropertyChanged("PriceString");
                }
            }
        }
    }

    public class LatestVersion1 : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private double _PriceString = 0;

        public double PriceString
        {
            get
            {
                return this._PriceString;
            }

            set
            {
                if (this._PriceString != value)
                {
                    this._PriceString = value;
                    this.OnPropertyChanged("PriceString");
                }
            }
        }
    }

    public class StoreApp : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private AppCategory _AppCategory = new AppCategory();

        public AppCategory AppCategory
        {
            get
            {
                return this._AppCategory;
            }

            set
            {
                if (this._AppCategory != value)
                {
                    this._AppCategory = value;
                    this.OnPropertyChanged("AppCategory");
                }
            }
        }

        private LatestVersion _LatestVersion = new LatestVersion();

        public LatestVersion LatestVersion
        {
            get
            {
                return this._LatestVersion;
            }

            set
            {
                if (this._LatestVersion != value)
                {
                    this._LatestVersion = value;
                    this.OnPropertyChanged("LatestVersion");
                }
            }
        }

        private string _DeveloperName = string.Empty;

        public string DeveloperName
        {
            get
            {
                return this._DeveloperName;
            }

            set
            {
                if (this._DeveloperName != value)
                {
                    this._DeveloperName = value;
                    this.OnPropertyChanged("DeveloperName");
                }
            }
        }

        private string _Name = string.Empty;

        public string Name
        {
            get
            {
                return this._Name;
            }

            set
            {
                if (this._Name != value)
                {
                    this._Name = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        private string _Description = string.Empty;

        public string Description
        {
            get
            {
                return this._Description;
            }

            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        private Windows.UI.Xaml.Media.ImageSource _Icon128x128 = null;

        public Windows.UI.Xaml.Media.ImageSource Icon128x128
        {
            get
            {
                return this._Icon128x128;
            }

            set
            {
                if (this._Icon128x128 != value)
                {
                    this._Icon128x128 = value;
                    this.OnPropertyChanged("Icon128x128");
                }
            }
        }
    }

    public class AppCategory : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private string _Title = string.Empty;

        public string Title
        {
            get
            {
                return this._Title;
            }

            set
            {
                if (this._Title != value)
                {
                    this._Title = value;
                    this.OnPropertyChanged("Title");
                }
            }
        }
    }

    public class LatestVersion : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private string _Description = string.Empty;

        public string Description
        {
            get
            {
                return this._Description;
            }

            set
            {
                if (this._Description != value)
                {
                    this._Description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        private double _SizeString = 0;

        public double SizeString
        {
            get
            {
                return this._SizeString;
            }

            set
            {
                if (this._SizeString != value)
                {
                    this._SizeString = value;
                    this.OnPropertyChanged("SizeString");
                }
            }
        }
    }

    public class DownloadManager : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private CurrentDownloads _CurrentDownloads = new CurrentDownloads();

        public CurrentDownloads CurrentDownloads
        {
            get
            {
                return this._CurrentDownloads;
            }
        }

        private CompletedDownloads _CompletedDownloads = new CompletedDownloads();

        public CompletedDownloads CompletedDownloads
        {
            get
            {
                return this._CompletedDownloads;
            }
        }
    }

    public class CurrentDownloads : System.Collections.ObjectModel.ObservableCollection<CurrentDownloadsItem>
    { 
    }

    public class CurrentDownloadsItem : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private string _AppName = string.Empty;

        public string AppName
        {
            get
            {
                return this._AppName;
            }

            set
            {
                if (this._AppName != value)
                {
                    this._AppName = value;
                    this.OnPropertyChanged("AppName");
                }
            }
        }

        private Windows.UI.Xaml.Media.ImageSource _AppIcon64x64 = null;

        public Windows.UI.Xaml.Media.ImageSource AppIcon64x64
        {
            get
            {
                return this._AppIcon64x64;
            }

            set
            {
                if (this._AppIcon64x64 != value)
                {
                    this._AppIcon64x64 = value;
                    this.OnPropertyChanged("AppIcon64x64");
                }
            }
        }

        private double _ProgressPercentage = 0;

        public double ProgressPercentage
        {
            get
            {
                return this._ProgressPercentage;
            }

            set
            {
                if (this._ProgressPercentage != value)
                {
                    this._ProgressPercentage = value;
                    this.OnPropertyChanged("ProgressPercentage");
                }
            }
        }

        private string _StatusString = string.Empty;

        public string StatusString
        {
            get
            {
                return this._StatusString;
            }

            set
            {
                if (this._StatusString != value)
                {
                    this._StatusString = value;
                    this.OnPropertyChanged("StatusString");
                }
            }
        }

        private double _BytesReceivedString = 0;

        public double BytesReceivedString
        {
            get
            {
                return this._BytesReceivedString;
            }

            set
            {
                if (this._BytesReceivedString != value)
                {
                    this._BytesReceivedString = value;
                    this.OnPropertyChanged("BytesReceivedString");
                }
            }
        }

        private double _TotallBytesToReceiveString = 0;

        public double TotallBytesToReceiveString
        {
            get
            {
                return this._TotallBytesToReceiveString;
            }

            set
            {
                if (this._TotallBytesToReceiveString != value)
                {
                    this._TotallBytesToReceiveString = value;
                    this.OnPropertyChanged("TotallBytesToReceiveString");
                }
            }
        }
    }

    public class CompletedDownloads : System.Collections.ObjectModel.ObservableCollection<CompletedDownloadsItem>
    { 
    }

    public class CompletedDownloadsItem : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private string _AppName = string.Empty;

        public string AppName
        {
            get
            {
                return this._AppName;
            }

            set
            {
                if (this._AppName != value)
                {
                    this._AppName = value;
                    this.OnPropertyChanged("AppName");
                }
            }
        }

        private string _InstallationStatusString = string.Empty;

        public string InstallationStatusString
        {
            get
            {
                return this._InstallationStatusString;
            }

            set
            {
                if (this._InstallationStatusString != value)
                {
                    this._InstallationStatusString = value;
                    this.OnPropertyChanged("InstallationStatusString");
                }
            }
        }
    }

    public class Person : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private string _FirstName = string.Empty;

        public string FirstName
        {
            get
            {
                return this._FirstName;
            }

            set
            {
                if (this._FirstName != value)
                {
                    this._FirstName = value;
                    this.OnPropertyChanged("FirstName");
                }
            }
        }

        private string _LastName = string.Empty;

        public string LastName
        {
            get
            {
                return this._LastName;
            }

            set
            {
                if (this._LastName != value)
                {
                    this._LastName = value;
                    this.OnPropertyChanged("LastName");
                }
            }
        }

        private string _FullName = string.Empty;

        public string FullName
        {
            get
            {
                return this._FullName;
            }

            set
            {
                if (this._FullName != value)
                {
                    this._FullName = value;
                    this.OnPropertyChanged("FullName");
                }
            }
        }

        private string _PrimaryEmail = string.Empty;

        public string PrimaryEmail
        {
            get
            {
                return this._PrimaryEmail;
            }

            set
            {
                if (this._PrimaryEmail != value)
                {
                    this._PrimaryEmail = value;
                    this.OnPropertyChanged("PrimaryEmail");
                }
            }
        }
    }

    public class AppScreenShots : System.Collections.ObjectModel.ObservableCollection<AppScreenShotsItem>
    { 
    }

    public class AppScreenShotsItem : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private Windows.UI.Xaml.Media.ImageSource _ThumbnailImage = null;

        public Windows.UI.Xaml.Media.ImageSource ThumbnailImage
        {
            get
            {
                return this._ThumbnailImage;
            }

            set
            {
                if (this._ThumbnailImage != value)
                {
                    this._ThumbnailImage = value;
                    this.OnPropertyChanged("ThumbnailImage");
                }
            }
        }
    }

    public class RandomApps : System.Collections.ObjectModel.ObservableCollection<RandomAppsItem>
    { 
    }

    public class RandomAppsItem : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private string _Name = string.Empty;

        public string Name
        {
            get
            {
                return this._Name;
            }

            set
            {
                if (this._Name != value)
                {
                    this._Name = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        private string _PriceString = string.Empty;

        public string PriceString
        {
            get
            {
                return this._PriceString;
            }

            set
            {
                if (this._PriceString != value)
                {
                    this._PriceString = value;
                    this.OnPropertyChanged("PriceString");
                }
            }
        }

        private Windows.UI.Xaml.Media.ImageSource _Icon128x128 = null;

        public Windows.UI.Xaml.Media.ImageSource Icon128x128
        {
            get
            {
                return this._Icon128x128;
            }

            set
            {
                if (this._Icon128x128 != value)
                {
                    this._Icon128x128 = value;
                    this.OnPropertyChanged("Icon128x128");
                }
            }
        }
    }

    public class StoreApps : System.Collections.ObjectModel.ObservableCollection<StoreAppsItem>
    { 
    }

    public class StoreAppsItem : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private string _Name = string.Empty;

        public string Name
        {
            get
            {
                return this._Name;
            }

            set
            {
                if (this._Name != value)
                {
                    this._Name = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        private string _PriceString = string.Empty;

        public string PriceString
        {
            get
            {
                return this._PriceString;
            }

            set
            {
                if (this._PriceString != value)
                {
                    this._PriceString = value;
                    this.OnPropertyChanged("PriceString");
                }
            }
        }

        private Windows.UI.Xaml.Media.ImageSource _Icon128x128 = null;

        public Windows.UI.Xaml.Media.ImageSource Icon128x128
        {
            get
            {
                return this._Icon128x128;
            }

            set
            {
                if (this._Icon128x128 != value)
                {
                    this._Icon128x128 = value;
                    this.OnPropertyChanged("Icon128x128");
                }
            }
        }
    }

    public class FeaturedAppsItem : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private Windows.UI.Xaml.Media.ImageSource _BackgroundImage = null;

        public Windows.UI.Xaml.Media.ImageSource BackgroundImage
        {
            get
            {
                return this._BackgroundImage;
            }

            set
            {
                if (this._BackgroundImage != value)
                {
                    this._BackgroundImage = value;
                    this.OnPropertyChanged("BackgroundImage");
                }
            }
        }

        private string _Name = string.Empty;

        public string Name
        {
            get
            {
                return this._Name;
            }

            set
            {
                if (this._Name != value)
                {
                    this._Name = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }
    }

    public class FeaturedApps : System.Collections.ObjectModel.ObservableCollection<FeaturedAppsItem>
    { 
    }
#endif
}
