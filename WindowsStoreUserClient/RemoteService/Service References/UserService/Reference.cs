//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace WindowsStore.Client.User.Service.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppCategoryDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppCategoryDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WindowsStore.Client.User.Service.UserService.AppType AppTypeField;
        
        private int IdField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.User.Service.UserService.AppType AppType {
            get {
                return this.AppTypeField;
            }
            set {
                if ((this.AppTypeField.Equals(value) != true)) {
                    this.AppTypeField = value;
                    this.RaisePropertyChanged("AppType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppType", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum AppType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Application = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Game = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterDataContractBase", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WindowsStore.Client.User.Service.UserService.ScreenshotFilterDataContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WindowsStore.Client.User.Service.UserService.AppFilterDataContract))]
    public partial class FilterDataContractBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotFilterDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class ScreenshotFilterDataContract : WindowsStore.Client.User.Service.UserService.FilterDataContractBase {
        
        private System.Guid AppGuidField;
        
        private int AppIdField;
        
        private int ScreenshotIdField;
        
        private int ScreenshotIndexField;
        
        private WindowsStore.Client.User.Service.UserService.ScreenshotSize ScreenshotSizeField;
        
        private WindowsStore.Client.User.Service.UserService.ScreenshotType ScreenshotTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreenshotId {
            get {
                return this.ScreenshotIdField;
            }
            set {
                if ((this.ScreenshotIdField.Equals(value) != true)) {
                    this.ScreenshotIdField = value;
                    this.RaisePropertyChanged("ScreenshotId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreenshotIndex {
            get {
                return this.ScreenshotIndexField;
            }
            set {
                if ((this.ScreenshotIndexField.Equals(value) != true)) {
                    this.ScreenshotIndexField = value;
                    this.RaisePropertyChanged("ScreenshotIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.User.Service.UserService.ScreenshotSize ScreenshotSize {
            get {
                return this.ScreenshotSizeField;
            }
            set {
                if ((this.ScreenshotSizeField.Equals(value) != true)) {
                    this.ScreenshotSizeField = value;
                    this.RaisePropertyChanged("ScreenshotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.User.Service.UserService.ScreenshotType ScreenshotType {
            get {
                return this.ScreenshotTypeField;
            }
            set {
                if ((this.ScreenshotTypeField.Equals(value) != true)) {
                    this.ScreenshotTypeField = value;
                    this.RaisePropertyChanged("ScreenshotType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppFilterDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppFilterDataContract : WindowsStore.Client.User.Service.UserService.FilterDataContractBase {
        
        private System.Nullable<int> AppCategoryIdField;
        
        private System.Nullable<System.Guid> AppGuidField;
        
        private System.Nullable<int> AppIdField;
        
        private System.Nullable<WindowsStore.Client.User.Service.UserService.AppOrderMethod> AppOrderMethodField;
        
        private System.Nullable<WindowsStore.Client.User.Service.UserService.AppPricing> AppPricingField;
        
        private System.Nullable<WindowsStore.Client.User.Service.UserService.AppType> AppTypeField;
        
        private System.Nullable<bool> FeaturedAppField;
        
        private bool Include128X128IconField;
        
        private bool Include256X256IconField;
        
        private bool IncludeAppPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AppCategoryId {
            get {
                return this.AppCategoryIdField;
            }
            set {
                if ((this.AppCategoryIdField.Equals(value) != true)) {
                    this.AppCategoryIdField = value;
                    this.RaisePropertyChanged("AppCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<WindowsStore.Client.User.Service.UserService.AppOrderMethod> AppOrderMethod {
            get {
                return this.AppOrderMethodField;
            }
            set {
                if ((this.AppOrderMethodField.Equals(value) != true)) {
                    this.AppOrderMethodField = value;
                    this.RaisePropertyChanged("AppOrderMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<WindowsStore.Client.User.Service.UserService.AppPricing> AppPricing {
            get {
                return this.AppPricingField;
            }
            set {
                if ((this.AppPricingField.Equals(value) != true)) {
                    this.AppPricingField = value;
                    this.RaisePropertyChanged("AppPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<WindowsStore.Client.User.Service.UserService.AppType> AppType {
            get {
                return this.AppTypeField;
            }
            set {
                if ((this.AppTypeField.Equals(value) != true)) {
                    this.AppTypeField = value;
                    this.RaisePropertyChanged("AppType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> FeaturedApp {
            get {
                return this.FeaturedAppField;
            }
            set {
                if ((this.FeaturedAppField.Equals(value) != true)) {
                    this.FeaturedAppField = value;
                    this.RaisePropertyChanged("FeaturedApp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Include128X128Icon {
            get {
                return this.Include128X128IconField;
            }
            set {
                if ((this.Include128X128IconField.Equals(value) != true)) {
                    this.Include128X128IconField = value;
                    this.RaisePropertyChanged("Include128X128Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Include256X256Icon {
            get {
                return this.Include256X256IconField;
            }
            set {
                if ((this.Include256X256IconField.Equals(value) != true)) {
                    this.Include256X256IconField = value;
                    this.RaisePropertyChanged("Include256X256Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeAppPrice {
            get {
                return this.IncludeAppPriceField;
            }
            set {
                if ((this.IncludeAppPriceField.Equals(value) != true)) {
                    this.IncludeAppPriceField = value;
                    this.RaisePropertyChanged("IncludeAppPrice");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppOrderMethod", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum AppOrderMethod : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Top = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BestRated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewAndRising = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppPricing", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum AppPricing : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreeApp = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonFreeApp = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotSize", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum ScreenshotSize : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thumbnail = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotType", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum ScreenshotType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Desktop = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WindowsStore.Client.User.Service.UserService.AppCategoryDataContract AppCategoryField;
        
        private string DescriptionField;
        
        private int DeveloperIdField;
        
        private string DeveloperNameField;
        
        private System.Guid GuidField;
        
        private byte[] Icon128X128Field;
        
        private byte[] Icon256X256Field;
        
        private int IdField;
        
        private WindowsStore.Client.User.Service.UserService.AppVersionDataContract LatestVersionField;
        
        private string NameField;
        
        private int NumberOfMobileScreenshotsField;
        
        private int PriceField;
        
        private long SizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.User.Service.UserService.AppCategoryDataContract AppCategory {
            get {
                return this.AppCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AppCategoryField, value) != true)) {
                    this.AppCategoryField = value;
                    this.RaisePropertyChanged("AppCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeveloperId {
            get {
                return this.DeveloperIdField;
            }
            set {
                if ((this.DeveloperIdField.Equals(value) != true)) {
                    this.DeveloperIdField = value;
                    this.RaisePropertyChanged("DeveloperId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeveloperName {
            get {
                return this.DeveloperNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeveloperNameField, value) != true)) {
                    this.DeveloperNameField = value;
                    this.RaisePropertyChanged("DeveloperName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Icon128X128 {
            get {
                return this.Icon128X128Field;
            }
            set {
                if ((object.ReferenceEquals(this.Icon128X128Field, value) != true)) {
                    this.Icon128X128Field = value;
                    this.RaisePropertyChanged("Icon128X128");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Icon256X256 {
            get {
                return this.Icon256X256Field;
            }
            set {
                if ((object.ReferenceEquals(this.Icon256X256Field, value) != true)) {
                    this.Icon256X256Field = value;
                    this.RaisePropertyChanged("Icon256X256");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.User.Service.UserService.AppVersionDataContract LatestVersion {
            get {
                return this.LatestVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestVersionField, value) != true)) {
                    this.LatestVersionField = value;
                    this.RaisePropertyChanged("LatestVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfMobileScreenshots {
            get {
                return this.NumberOfMobileScreenshotsField;
            }
            set {
                if ((this.NumberOfMobileScreenshotsField.Equals(value) != true)) {
                    this.NumberOfMobileScreenshotsField = value;
                    this.RaisePropertyChanged("NumberOfMobileScreenshots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppVersionDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AppVersionDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid AppGuidField;
        
        private int AppIdField;
        
        private System.Nullable<long> ArmPackageSizeField;
        
        private System.Nullable<WindowsStore.Client.User.Service.UserService.CpuArchitecture> CpuArchitectureFlagsField;
        
        private string DescriptionField;
        
        private int DownloadsField;
        
        private bool HasArmPackageField;
        
        private bool HasX64PackageField;
        
        private bool HasX86PackageField;
        
        private int IdField;
        
        private System.DateTime PublishDateField;
        
        private long SizeField;
        
        private string VersionField;
        
        private System.Nullable<long> X64PackageSizeField;
        
        private System.Nullable<long> X86PackageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ArmPackageSize {
            get {
                return this.ArmPackageSizeField;
            }
            set {
                if ((this.ArmPackageSizeField.Equals(value) != true)) {
                    this.ArmPackageSizeField = value;
                    this.RaisePropertyChanged("ArmPackageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<WindowsStore.Client.User.Service.UserService.CpuArchitecture> CpuArchitectureFlags {
            get {
                return this.CpuArchitectureFlagsField;
            }
            set {
                if ((this.CpuArchitectureFlagsField.Equals(value) != true)) {
                    this.CpuArchitectureFlagsField = value;
                    this.RaisePropertyChanged("CpuArchitectureFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Downloads {
            get {
                return this.DownloadsField;
            }
            set {
                if ((this.DownloadsField.Equals(value) != true)) {
                    this.DownloadsField = value;
                    this.RaisePropertyChanged("Downloads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasArmPackage {
            get {
                return this.HasArmPackageField;
            }
            set {
                if ((this.HasArmPackageField.Equals(value) != true)) {
                    this.HasArmPackageField = value;
                    this.RaisePropertyChanged("HasArmPackage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasX64Package {
            get {
                return this.HasX64PackageField;
            }
            set {
                if ((this.HasX64PackageField.Equals(value) != true)) {
                    this.HasX64PackageField = value;
                    this.RaisePropertyChanged("HasX64Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasX86Package {
            get {
                return this.HasX86PackageField;
            }
            set {
                if ((this.HasX86PackageField.Equals(value) != true)) {
                    this.HasX86PackageField = value;
                    this.RaisePropertyChanged("HasX86Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> X64PackageSize {
            get {
                return this.X64PackageSizeField;
            }
            set {
                if ((this.X64PackageSizeField.Equals(value) != true)) {
                    this.X64PackageSizeField = value;
                    this.RaisePropertyChanged("X64PackageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> X86PackageSize {
            get {
                return this.X86PackageSizeField;
            }
            set {
                if ((this.X86PackageSizeField.Equals(value) != true)) {
                    this.X86PackageSizeField = value;
                    this.RaisePropertyChanged("X86PackageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="CpuArchitecture", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum CpuArchitecture : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Arm = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        X86 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        X64 = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreenshotDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class ScreenshotDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid AppGuidField;
        
        private int AppIdField;
        
        private string FileNameField;
        
        private int IdField;
        
        private byte[] ImageSourceField;
        
        private byte[] OriginalField;
        
        private WindowsStore.Client.User.Service.UserService.ScreenshotSize ScreenshotSizeField;
        
        private WindowsStore.Client.User.Service.UserService.ScreenshotType ScreenshotTypeField;
        
        private byte[] ThumbnailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AppGuid {
            get {
                return this.AppGuidField;
            }
            set {
                if ((this.AppGuidField.Equals(value) != true)) {
                    this.AppGuidField = value;
                    this.RaisePropertyChanged("AppGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageSource {
            get {
                return this.ImageSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageSourceField, value) != true)) {
                    this.ImageSourceField = value;
                    this.RaisePropertyChanged("ImageSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Original {
            get {
                return this.OriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalField, value) != true)) {
                    this.OriginalField = value;
                    this.RaisePropertyChanged("Original");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.User.Service.UserService.ScreenshotSize ScreenshotSize {
            get {
                return this.ScreenshotSizeField;
            }
            set {
                if ((this.ScreenshotSizeField.Equals(value) != true)) {
                    this.ScreenshotSizeField = value;
                    this.RaisePropertyChanged("ScreenshotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.User.Service.UserService.ScreenshotType ScreenshotType {
            get {
                return this.ScreenshotTypeField;
            }
            set {
                if ((this.ScreenshotTypeField.Equals(value) != true)) {
                    this.ScreenshotTypeField = value;
                    this.RaisePropertyChanged("ScreenshotType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NaturalPersonDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class NaturalPersonDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<byte> AgeField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private string NationalCodeField;
        
        private string PrimaryEmailField;
        
        private System.Nullable<WindowsStore.Client.User.Service.UserService.Sexuality> SexualityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCode {
            get {
                return this.NationalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalCodeField, value) != true)) {
                    this.NationalCodeField = value;
                    this.RaisePropertyChanged("NationalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEmail {
            get {
                return this.PrimaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEmailField, value) != true)) {
                    this.PrimaryEmailField = value;
                    this.RaisePropertyChanged("PrimaryEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<WindowsStore.Client.User.Service.UserService.Sexuality> Sexuality {
            get {
                return this.SexualityField;
            }
            set {
                if ((this.SexualityField.Equals(value) != true)) {
                    this.SexualityField = value;
                    this.RaisePropertyChanged("Sexuality");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sexuality", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum Sexuality : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationResultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AuthenticationResultDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AuthenticatedField;
        
        private string FirstNameField;
        
        private bool IsNaturalPersonField;
        
        private string LastNameField;
        
        private string NameField;
        
        private string PrimaryEmailField;
        
        private WindowsStore.Client.User.Service.UserService.UserAccountStatus UserAccountStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Authenticated {
            get {
                return this.AuthenticatedField;
            }
            set {
                if ((this.AuthenticatedField.Equals(value) != true)) {
                    this.AuthenticatedField = value;
                    this.RaisePropertyChanged("Authenticated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNaturalPerson {
            get {
                return this.IsNaturalPersonField;
            }
            set {
                if ((this.IsNaturalPersonField.Equals(value) != true)) {
                    this.IsNaturalPersonField = value;
                    this.RaisePropertyChanged("IsNaturalPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEmail {
            get {
                return this.PrimaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEmailField, value) != true)) {
                    this.PrimaryEmailField = value;
                    this.RaisePropertyChanged("PrimaryEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.User.Service.UserService.UserAccountStatus UserAccountStatus {
            get {
                return this.UserAccountStatusField;
            }
            set {
                if ((this.UserAccountStatusField.Equals(value) != true)) {
                    this.UserAccountStatusField = value;
                    this.RaisePropertyChanged("UserAccountStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAccountStatus", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum UserAccountStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Activated = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotActivated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blocked = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserClientDescriptorDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class UserClientDescriptorDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AutomaticUpdateEnabledField;
        
        private WindowsStore.Client.User.Service.UserService.CpuArchitecture CpuArchitectureField;
        
        private System.Guid DeviceIdField;
        
        private string FriendlyNameField;
        
        private string OperatingSystemField;
        
        private string PaasteelVersionField;
        
        private string SystemFirmwareVersionField;
        
        private string SystemHardwareVersionField;
        
        private string SystemManufacturerField;
        
        private string SystemProductNameField;
        
        private string SystemSkuField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutomaticUpdateEnabled {
            get {
                return this.AutomaticUpdateEnabledField;
            }
            set {
                if ((this.AutomaticUpdateEnabledField.Equals(value) != true)) {
                    this.AutomaticUpdateEnabledField = value;
                    this.RaisePropertyChanged("AutomaticUpdateEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.User.Service.UserService.CpuArchitecture CpuArchitecture {
            get {
                return this.CpuArchitectureField;
            }
            set {
                if ((this.CpuArchitectureField.Equals(value) != true)) {
                    this.CpuArchitectureField = value;
                    this.RaisePropertyChanged("CpuArchitecture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((this.DeviceIdField.Equals(value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FriendlyName {
            get {
                return this.FriendlyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendlyNameField, value) != true)) {
                    this.FriendlyNameField = value;
                    this.RaisePropertyChanged("FriendlyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatingSystem {
            get {
                return this.OperatingSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatingSystemField, value) != true)) {
                    this.OperatingSystemField = value;
                    this.RaisePropertyChanged("OperatingSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaasteelVersion {
            get {
                return this.PaasteelVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.PaasteelVersionField, value) != true)) {
                    this.PaasteelVersionField = value;
                    this.RaisePropertyChanged("PaasteelVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemFirmwareVersion {
            get {
                return this.SystemFirmwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemFirmwareVersionField, value) != true)) {
                    this.SystemFirmwareVersionField = value;
                    this.RaisePropertyChanged("SystemFirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemHardwareVersion {
            get {
                return this.SystemHardwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemHardwareVersionField, value) != true)) {
                    this.SystemHardwareVersionField = value;
                    this.RaisePropertyChanged("SystemHardwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemManufacturer {
            get {
                return this.SystemManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemManufacturerField, value) != true)) {
                    this.SystemManufacturerField = value;
                    this.RaisePropertyChanged("SystemManufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemProductName {
            get {
                return this.SystemProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemProductNameField, value) != true)) {
                    this.SystemProductNameField = value;
                    this.RaisePropertyChanged("SystemProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemSku {
            get {
                return this.SystemSkuField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemSkuField, value) != true)) {
                    this.SystemSkuField = value;
                    this.RaisePropertyChanged("SystemSku");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerDescriptorDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class ServerDescriptorDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WindowsStore.Client.User.Service.UserService.AppCategoryDataContract[] AppCategoriesField;
        
        private string SupportedDeveloperClientMaxVersionField;
        
        private string SupportedDeveloperClientMinVersionField;
        
        private string SupportedUserClientMaxVersionField;
        
        private string SupportedUserClientMinVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.User.Service.UserService.AppCategoryDataContract[] AppCategories {
            get {
                return this.AppCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.AppCategoriesField, value) != true)) {
                    this.AppCategoriesField = value;
                    this.RaisePropertyChanged("AppCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupportedDeveloperClientMaxVersion {
            get {
                return this.SupportedDeveloperClientMaxVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedDeveloperClientMaxVersionField, value) != true)) {
                    this.SupportedDeveloperClientMaxVersionField = value;
                    this.RaisePropertyChanged("SupportedDeveloperClientMaxVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupportedDeveloperClientMinVersion {
            get {
                return this.SupportedDeveloperClientMinVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedDeveloperClientMinVersionField, value) != true)) {
                    this.SupportedDeveloperClientMinVersionField = value;
                    this.RaisePropertyChanged("SupportedDeveloperClientMinVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupportedUserClientMaxVersion {
            get {
                return this.SupportedUserClientMaxVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedUserClientMaxVersionField, value) != true)) {
                    this.SupportedUserClientMaxVersionField = value;
                    this.RaisePropertyChanged("SupportedUserClientMaxVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupportedUserClientMinVersion {
            get {
                return this.SupportedUserClientMinVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedUserClientMinVersionField, value) != true)) {
                    this.SupportedUserClientMinVersionField = value;
                    this.RaisePropertyChanged("SupportedUserClientMinVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Paasteel.com", ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/GetAppCategories", ReplyAction="Paasteel.com/IUserService/GetAppCategoriesResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AppCategoryDataContract[]> GetAppCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/GetApps", ReplyAction="Paasteel.com/IUserService/GetAppsResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AppDataContract[]> GetAppsAsync(WindowsStore.Client.User.Service.UserService.AppFilterDataContract filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/GetRandomApps", ReplyAction="Paasteel.com/IUserService/GetRandomAppsResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AppDataContract[]> GetRandomAppsAsync(WindowsStore.Client.User.Service.UserService.AppFilterDataContract filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/GetAppDetail", ReplyAction="Paasteel.com/IUserService/GetAppDetailResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AppDataContract> GetAppDetailAsync(WindowsStore.Client.User.Service.UserService.AppFilterDataContract filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/GetAppsLatestVersionInfo", ReplyAction="Paasteel.com/IUserService/GetAppsLatestVersionInfoResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AppVersionDataContract[]> GetAppsLatestVersionInfoAsync(System.Guid[] appGuids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/GetAppScreenshot", ReplyAction="Paasteel.com/IUserService/GetAppScreenshotResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.ScreenshotDataContract> GetAppScreenshotAsync(WindowsStore.Client.User.Service.UserService.ScreenshotFilterDataContract filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/RegisterNaturalPerson", ReplyAction="Paasteel.com/IUserService/RegisterNaturalPersonResponse")]
        System.Threading.Tasks.Task RegisterNaturalPersonAsync(WindowsStore.Client.User.Service.UserService.NaturalPersonDataContract naturalPersonDataContract, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/SignIn", ReplyAction="Paasteel.com/IUserService/SignInResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AuthenticationResultDataContract> SignInAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/SignOut", ReplyAction="Paasteel.com/IUserService/SignOutResponse")]
        System.Threading.Tasks.Task SignOutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/IsEmailAvailableForRegistration", ReplyAction="Paasteel.com/IUserService/IsEmailAvailableForRegistrationResponse")]
        System.Threading.Tasks.Task<bool> IsEmailAvailableForRegistrationAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/TryActivateAccount", ReplyAction="Paasteel.com/IUserService/TryActivateAccountResponse")]
        System.Threading.Tasks.Task<bool> TryActivateAccountAsync(int activationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/ResendActivationCode", ReplyAction="Paasteel.com/IUserService/ResendActivationCodeResponse")]
        System.Threading.Tasks.Task ResendActivationCodeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/RegisterDevice", ReplyAction="Paasteel.com/IUserService/RegisterDeviceResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.ServerDescriptorDataContract> RegisterDeviceAsync(WindowsStore.Client.User.Service.UserService.UserClientDescriptorDataContract descriptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="Paasteel.com/IUserService/GetServerDescriptor", ReplyAction="Paasteel.com/IUserService/GetServerDescriptorResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.ServerDescriptorDataContract> GetServerDescriptorAsync(WindowsStore.Client.User.Service.UserService.UserClientDescriptorDataContract userClientDescriptor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : WindowsStore.Client.User.Service.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<WindowsStore.Client.User.Service.UserService.IUserService>, WindowsStore.Client.User.Service.UserService.IUserService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public UserServiceClient() : 
                base(UserServiceClient.GetDefaultBinding(), UserServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.NetHttpBinding_IUserService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(UserServiceClient.GetBindingForEndpoint(endpointConfiguration), UserServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(UserServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(UserServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AppCategoryDataContract[]> GetAppCategoriesAsync() {
            return base.Channel.GetAppCategoriesAsync();
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AppDataContract[]> GetAppsAsync(WindowsStore.Client.User.Service.UserService.AppFilterDataContract filter) {
            return base.Channel.GetAppsAsync(filter);
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AppDataContract[]> GetRandomAppsAsync(WindowsStore.Client.User.Service.UserService.AppFilterDataContract filter) {
            return base.Channel.GetRandomAppsAsync(filter);
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AppDataContract> GetAppDetailAsync(WindowsStore.Client.User.Service.UserService.AppFilterDataContract filter) {
            return base.Channel.GetAppDetailAsync(filter);
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AppVersionDataContract[]> GetAppsLatestVersionInfoAsync(System.Guid[] appGuids) {
            return base.Channel.GetAppsLatestVersionInfoAsync(appGuids);
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.ScreenshotDataContract> GetAppScreenshotAsync(WindowsStore.Client.User.Service.UserService.ScreenshotFilterDataContract filter) {
            return base.Channel.GetAppScreenshotAsync(filter);
        }
        
        public System.Threading.Tasks.Task RegisterNaturalPersonAsync(WindowsStore.Client.User.Service.UserService.NaturalPersonDataContract naturalPersonDataContract, string password) {
            return base.Channel.RegisterNaturalPersonAsync(naturalPersonDataContract, password);
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.AuthenticationResultDataContract> SignInAsync(string userName, string password) {
            return base.Channel.SignInAsync(userName, password);
        }
        
        public System.Threading.Tasks.Task SignOutAsync() {
            return base.Channel.SignOutAsync();
        }
        
        public System.Threading.Tasks.Task<bool> IsEmailAvailableForRegistrationAsync(string email) {
            return base.Channel.IsEmailAvailableForRegistrationAsync(email);
        }
        
        public System.Threading.Tasks.Task<bool> TryActivateAccountAsync(int activationCode) {
            return base.Channel.TryActivateAccountAsync(activationCode);
        }
        
        public System.Threading.Tasks.Task ResendActivationCodeAsync() {
            return base.Channel.ResendActivationCodeAsync();
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.ServerDescriptorDataContract> RegisterDeviceAsync(WindowsStore.Client.User.Service.UserService.UserClientDescriptorDataContract descriptor) {
            return base.Channel.RegisterDeviceAsync(descriptor);
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.User.Service.UserService.ServerDescriptorDataContract> GetServerDescriptorAsync(WindowsStore.Client.User.Service.UserService.UserClientDescriptorDataContract userClientDescriptor) {
            return base.Channel.GetServerDescriptorAsync(userClientDescriptor);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_IUserService)) {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                result.Elements.Add(new System.ServiceModel.Channels.BinaryMessageEncodingBindingElement());
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_IUserService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:1578/Service/UserService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return UserServiceClient.GetBindingForEndpoint(EndpointConfiguration.NetHttpBinding_IUserService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return UserServiceClient.GetEndpointAddress(EndpointConfiguration.NetHttpBinding_IUserService);
        }
        
        public enum EndpointConfiguration {
            
            NetHttpBinding_IUserService,
        }
    }
}
