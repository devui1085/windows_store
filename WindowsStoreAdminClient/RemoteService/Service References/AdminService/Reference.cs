//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace WindowsStore.Client.Admin.RemoteService.AdminService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationResultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class AuthenticationResultDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AuthenticatedField;
        
        private WindowsStore.Client.Admin.RemoteService.AdminService.UserAccountStatus UserAccountStatusField;
        
        private WindowsStore.Client.Admin.RemoteService.AdminService.PersonDataContract UserIdentityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Authenticated {
            get {
                return this.AuthenticatedField;
            }
            set {
                if ((this.AuthenticatedField.Equals(value) != true)) {
                    this.AuthenticatedField = value;
                    this.RaisePropertyChanged("Authenticated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Admin.RemoteService.AdminService.UserAccountStatus UserAccountStatus {
            get {
                return this.UserAccountStatusField;
            }
            set {
                if ((this.UserAccountStatusField.Equals(value) != true)) {
                    this.UserAccountStatusField = value;
                    this.RaisePropertyChanged("UserAccountStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Admin.RemoteService.AdminService.PersonDataContract UserIdentity {
            get {
                return this.UserIdentityField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdentityField, value) != true)) {
                    this.UserIdentityField = value;
                    this.RaisePropertyChanged("UserIdentity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class PersonDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private bool IsNaturalPersonField;
        
        private WindowsStore.Client.Admin.RemoteService.AdminService.LegalPersonDataContract LegalPersonDataContractField;
        
        private WindowsStore.Client.Admin.RemoteService.AdminService.NaturalPersonDataContract NaturalPersonDataContractField;
        
        private string PrimaryEmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNaturalPerson {
            get {
                return this.IsNaturalPersonField;
            }
            set {
                if ((this.IsNaturalPersonField.Equals(value) != true)) {
                    this.IsNaturalPersonField = value;
                    this.RaisePropertyChanged("IsNaturalPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Admin.RemoteService.AdminService.LegalPersonDataContract LegalPersonDataContract {
            get {
                return this.LegalPersonDataContractField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalPersonDataContractField, value) != true)) {
                    this.LegalPersonDataContractField = value;
                    this.RaisePropertyChanged("LegalPersonDataContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Admin.RemoteService.AdminService.NaturalPersonDataContract NaturalPersonDataContract {
            get {
                return this.NaturalPersonDataContractField;
            }
            set {
                if ((object.ReferenceEquals(this.NaturalPersonDataContractField, value) != true)) {
                    this.NaturalPersonDataContractField = value;
                    this.RaisePropertyChanged("NaturalPersonDataContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEmail {
            get {
                return this.PrimaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEmailField, value) != true)) {
                    this.PrimaryEmailField = value;
                    this.RaisePropertyChanged("PrimaryEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAccountStatus", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum UserAccountStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Activated = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotActivated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blocked = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalPersonDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class LegalPersonDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private bool IsAdminField;
        
        private bool IsDeveloperField;
        
        private bool IsLockedOutField;
        
        private bool IsNaturalPersonField;
        
        private string NameField;
        
        private string PasswordField;
        
        private string PrimaryEmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeveloper {
            get {
                return this.IsDeveloperField;
            }
            set {
                if ((this.IsDeveloperField.Equals(value) != true)) {
                    this.IsDeveloperField = value;
                    this.RaisePropertyChanged("IsDeveloper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLockedOut {
            get {
                return this.IsLockedOutField;
            }
            set {
                if ((this.IsLockedOutField.Equals(value) != true)) {
                    this.IsLockedOutField = value;
                    this.RaisePropertyChanged("IsLockedOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNaturalPerson {
            get {
                return this.IsNaturalPersonField;
            }
            set {
                if ((this.IsNaturalPersonField.Equals(value) != true)) {
                    this.IsNaturalPersonField = value;
                    this.RaisePropertyChanged("IsNaturalPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEmail {
            get {
                return this.PrimaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEmailField, value) != true)) {
                    this.PrimaryEmailField = value;
                    this.RaisePropertyChanged("PrimaryEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NaturalPersonDataContract", Namespace="http://schemas.datacontract.org/2004/07/Store.DataContract")]
    public partial class NaturalPersonDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<byte> AgeField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private bool IsAdminField;
        
        private bool IsDeveloperField;
        
        private bool IsLockedOutField;
        
        private string LastNameField;
        
        private string NationalCodeField;
        
        private string PasswordField;
        
        private string PrimaryEmailField;
        
        private WindowsStore.Client.Admin.RemoteService.AdminService.Sexuality SexualityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeveloper {
            get {
                return this.IsDeveloperField;
            }
            set {
                if ((this.IsDeveloperField.Equals(value) != true)) {
                    this.IsDeveloperField = value;
                    this.RaisePropertyChanged("IsDeveloper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLockedOut {
            get {
                return this.IsLockedOutField;
            }
            set {
                if ((this.IsLockedOutField.Equals(value) != true)) {
                    this.IsLockedOutField = value;
                    this.RaisePropertyChanged("IsLockedOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCode {
            get {
                return this.NationalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalCodeField, value) != true)) {
                    this.NationalCodeField = value;
                    this.RaisePropertyChanged("NationalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEmail {
            get {
                return this.PrimaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEmailField, value) != true)) {
                    this.PrimaryEmailField = value;
                    this.RaisePropertyChanged("PrimaryEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WindowsStore.Client.Admin.RemoteService.AdminService.Sexuality Sexuality {
            get {
                return this.SexualityField;
            }
            set {
                if ((this.SexualityField.Equals(value) != true)) {
                    this.SexualityField = value;
                    this.RaisePropertyChanged("Sexuality");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sexuality", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Enum")]
    public enum Sexuality : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingParameters", Namespace="http://schemas.datacontract.org/2004/07/Store.Common.Infrastructure")]
    public partial class PagingParameters : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminService.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/SignIn", ReplyAction="http://tempuri.org/IAdminService/SignInResponse")]
        System.Threading.Tasks.Task<WindowsStore.Client.Admin.RemoteService.AdminService.AuthenticationResultDataContract> SignInAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetUsers", ReplyAction="http://tempuri.org/IAdminService/GetUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<WindowsStore.Client.Admin.RemoteService.AdminService.PersonDataContract>> GetUsersAsync(WindowsStore.Client.Admin.RemoteService.AdminService.PagingParameters pagingParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RegisterNaturalPerson", ReplyAction="http://tempuri.org/IAdminService/RegisterNaturalPersonResponse")]
        System.Threading.Tasks.Task RegisterNaturalPersonAsync(WindowsStore.Client.Admin.RemoteService.AdminService.NaturalPersonDataContract naturalPerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/RegisterLegalPerson", ReplyAction="http://tempuri.org/IAdminService/RegisterLegalPersonResponse")]
        System.Threading.Tasks.Task RegisterLegalPersonAsync(WindowsStore.Client.Admin.RemoteService.AdminService.LegalPersonDataContract legalPerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateNaturalPerson", ReplyAction="http://tempuri.org/IAdminService/UpdateNaturalPersonResponse")]
        System.Threading.Tasks.Task UpdateNaturalPersonAsync(WindowsStore.Client.Admin.RemoteService.AdminService.NaturalPersonDataContract naturalPerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateLegalPerson", ReplyAction="http://tempuri.org/IAdminService/UpdateLegalPersonResponse")]
        System.Threading.Tasks.Task UpdateLegalPersonAsync(WindowsStore.Client.Admin.RemoteService.AdminService.LegalPersonDataContract legalPerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeletePerson", ReplyAction="http://tempuri.org/IAdminService/DeletePersonResponse")]
        System.Threading.Tasks.Task DeletePersonAsync(WindowsStore.Client.Admin.RemoteService.AdminService.PersonDataContract personDataContract);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : WindowsStore.Client.Admin.RemoteService.AdminService.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<WindowsStore.Client.Admin.RemoteService.AdminService.IAdminService>, WindowsStore.Client.Admin.RemoteService.AdminService.IAdminService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AdminServiceClient() : 
                base(AdminServiceClient.GetDefaultBinding(), AdminServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.NetHttpBinding_IAdminService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AdminServiceClient.GetBindingForEndpoint(endpointConfiguration), AdminServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AdminServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AdminServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<WindowsStore.Client.Admin.RemoteService.AdminService.AuthenticationResultDataContract> SignInAsync(string email, string password) {
            return base.Channel.SignInAsync(email, password);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<WindowsStore.Client.Admin.RemoteService.AdminService.PersonDataContract>> GetUsersAsync(WindowsStore.Client.Admin.RemoteService.AdminService.PagingParameters pagingParameters) {
            return base.Channel.GetUsersAsync(pagingParameters);
        }
        
        public System.Threading.Tasks.Task RegisterNaturalPersonAsync(WindowsStore.Client.Admin.RemoteService.AdminService.NaturalPersonDataContract naturalPerson) {
            return base.Channel.RegisterNaturalPersonAsync(naturalPerson);
        }
        
        public System.Threading.Tasks.Task RegisterLegalPersonAsync(WindowsStore.Client.Admin.RemoteService.AdminService.LegalPersonDataContract legalPerson) {
            return base.Channel.RegisterLegalPersonAsync(legalPerson);
        }
        
        public System.Threading.Tasks.Task UpdateNaturalPersonAsync(WindowsStore.Client.Admin.RemoteService.AdminService.NaturalPersonDataContract naturalPerson) {
            return base.Channel.UpdateNaturalPersonAsync(naturalPerson);
        }
        
        public System.Threading.Tasks.Task UpdateLegalPersonAsync(WindowsStore.Client.Admin.RemoteService.AdminService.LegalPersonDataContract legalPerson) {
            return base.Channel.UpdateLegalPersonAsync(legalPerson);
        }
        
        public System.Threading.Tasks.Task DeletePersonAsync(WindowsStore.Client.Admin.RemoteService.AdminService.PersonDataContract personDataContract) {
            return base.Channel.DeletePersonAsync(personDataContract);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_IAdminService)) {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                result.Elements.Add(new System.ServiceModel.Channels.BinaryMessageEncodingBindingElement());
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_IAdminService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:1578/Service/AdminService.svc/~/Service/Admin.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return AdminServiceClient.GetBindingForEndpoint(EndpointConfiguration.NetHttpBinding_IAdminService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return AdminServiceClient.GetEndpointAddress(EndpointConfiguration.NetHttpBinding_IAdminService);
        }
        
        public enum EndpointConfiguration {
            
            NetHttpBinding_IAdminService,
        }
    }
}
